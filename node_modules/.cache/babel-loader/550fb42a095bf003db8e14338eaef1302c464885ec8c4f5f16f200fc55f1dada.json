{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const FormStepper=_ref=>{let{sections,currentStep,completedSteps,onStepClick,stepValidations,getStepValidation}=_ref;const isStepClickable=stepIndex=>{// Can click on completed steps or the next available step\nreturn completedSteps.has(stepIndex)||stepIndex===currentStep;};const getStepStatus=stepIndex=>{if(completedSteps.has(stepIndex))return'completed';if(stepIndex===currentStep)return'current';// Check if step is incomplete (has validation errors)\nif(getStepValidation){const validation=getStepValidation(stepIndex);if(!validation.canProceed)return'incomplete';}return'upcoming';};const getStepIcon=(stepIndex,status)=>{if(status==='completed'){return/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 rounded-full bg-teal-600 text-white flex items-center justify-center text-xs\",children:\"\\u2713\"});}if(status==='current'){return/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 rounded-full bg-teal-100 text-teal-600 border border-teal-600 flex items-center justify-center text-xs\",children:stepIndex+1});}if(status==='incomplete'){return/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 rounded-full bg-red-100 text-red-600 border border-red-600 flex items-center justify-center text-xs\",children:\"!\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 rounded-full bg-gray-100 text-gray-400 border border-gray-300 flex items-center justify-center text-xs\",children:stepIndex+1});};const getStepTextColor=status=>{switch(status){case'completed':return'text-teal-600';case'current':return'text-teal-600';case'incomplete':return'text-red-600';case'upcoming':return'text-gray-400';}};const getStepTooltip=(stepIndex,status)=>{if(status==='incomplete'&&getStepValidation){const validation=getStepValidation(stepIndex);if(validation.missingFields.length>0){return`Champs requis manquants: ${validation.missingFields.join(', ')}`;}}switch(status){case'completed':return'Étape terminée';case'current':return'Étape en cours';case'incomplete':return'Étape incomplète - champs requis manquants';case'upcoming':return'Étape à venir';default:return'';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-between mb-1\",children:sections.map((section,index)=>{const status=getStepStatus(index);const isClickable=isStepClickable(index);const tooltip=getStepTooltip(index,status);return/*#__PURE__*/_jsxs(\"div\",{className:`flex items-center ${getStepTextColor(status)} ${isClickable&&onStepClick?'cursor-pointer hover:opacity-80':'cursor-not-allowed opacity-60'} transition-all duration-200`,onClick:()=>isClickable&&(onStepClick===null||onStepClick===void 0?void 0:onStepClick(index)),title:tooltip,children:[getStepIcon(index,status),/*#__PURE__*/_jsx(\"span\",{className:\"hidden sm:block text-xs font-medium ml-1\",children:section.title}),index<sections.length-1&&/*#__PURE__*/_jsx(\"div\",{className:\"hidden sm:block w-6 h-0.5 mx-1 bg-gray-200\"})]},section.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"relative h-1 bg-gray-200 rounded-full overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"absolute h-full bg-teal-600 transition-all duration-300 ease-out\",style:{width:`${(currentStep+1)/sections.length*100}%`}})}),getStepValidation&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 text-xs text-gray-600\",children:(()=>{const currentValidation=getStepValidation(currentStep);if(!currentValidation.canProceed){return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1 text-red-600\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsxs(\"span\",{children:[currentValidation.missingFields.length,\" champ(s) requis manquant(s) pour continuer \\xE0 l'\\xE9tape suivante\"]})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1 text-teal-600\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u2713\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Cette \\xE9tape est compl\\xE8te, vous pouvez continuer\"})]});})()})]});};","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","FormStepper","_ref","sections","currentStep","completedSteps","onStepClick","stepValidations","getStepValidation","isStepClickable","stepIndex","has","getStepStatus","validation","canProceed","getStepIcon","status","className","children","getStepTextColor","getStepTooltip","missingFields","length","join","map","section","index","isClickable","tooltip","onClick","title","id","style","width","currentValidation"],"sources":["C:/Users/chemseddine/Desktop/frontend/src/components/forms/FutureCreationForm/common/FormStepper.tsx"],"sourcesContent":["import React from 'react';\nimport { FormSection } from '../hooks/useFormNavigation';\nimport { StepValidationResult } from '../hooks/useFormNavigation';\n\ninterface FormStepperProps {\n  sections: FormSection[];\n  currentStep: number;\n  completedSteps: Set<number>;\n  onStepClick?: (stepIndex: number) => void;\n  stepValidations?: StepValidationResult[];\n  getStepValidation?: (stepIndex: number) => StepValidationResult;\n}\n\nexport const FormStepper: React.FC<FormStepperProps> = ({\n  sections,\n  currentStep,\n  completedSteps,\n  onStepClick,\n  stepValidations,\n  getStepValidation\n}) => {\n  const isStepClickable = (stepIndex: number): boolean => {\n    // Can click on completed steps or the next available step\n    return completedSteps.has(stepIndex) || stepIndex === currentStep;\n  };\n\n  const getStepStatus = (stepIndex: number): 'completed' | 'current' | 'upcoming' | 'incomplete' => {\n    if (completedSteps.has(stepIndex)) return 'completed';\n    if (stepIndex === currentStep) return 'current';\n    \n    // Check if step is incomplete (has validation errors)\n    if (getStepValidation) {\n      const validation = getStepValidation(stepIndex);\n      if (!validation.canProceed) return 'incomplete';\n    }\n    \n    return 'upcoming';\n  };\n\n  const getStepIcon = (stepIndex: number, status: 'completed' | 'current' | 'upcoming' | 'incomplete') => {\n    if (status === 'completed') {\n      return (\n        <div className=\"w-5 h-5 rounded-full bg-teal-600 text-white flex items-center justify-center text-xs\">\n          ✓\n        </div>\n      );\n    }\n    \n    if (status === 'current') {\n      return (\n        <div className=\"w-5 h-5 rounded-full bg-teal-100 text-teal-600 border border-teal-600 flex items-center justify-center text-xs\">\n          {stepIndex + 1}\n        </div>\n      );\n    }\n    \n    if (status === 'incomplete') {\n      return (\n        <div className=\"w-5 h-5 rounded-full bg-red-100 text-red-600 border border-red-600 flex items-center justify-center text-xs\">\n          !\n        </div>\n      );\n    }\n    \n    return (\n      <div className=\"w-5 h-5 rounded-full bg-gray-100 text-gray-400 border border-gray-300 flex items-center justify-center text-xs\">\n        {stepIndex + 1}\n      </div>\n    );\n  };\n\n  const getStepTextColor = (status: 'completed' | 'current' | 'upcoming' | 'incomplete') => {\n    switch (status) {\n      case 'completed':\n        return 'text-teal-600';\n      case 'current':\n        return 'text-teal-600';\n      case 'incomplete':\n        return 'text-red-600';\n      case 'upcoming':\n        return 'text-gray-400';\n    }\n  };\n\n  const getStepTooltip = (stepIndex: number, status: 'completed' | 'current' | 'upcoming' | 'incomplete') => {\n    if (status === 'incomplete' && getStepValidation) {\n      const validation = getStepValidation(stepIndex);\n      if (validation.missingFields.length > 0) {\n        return `Champs requis manquants: ${validation.missingFields.join(', ')}`;\n      }\n    }\n    \n    switch (status) {\n      case 'completed':\n        return 'Étape terminée';\n      case 'current':\n        return 'Étape en cours';\n      case 'incomplete':\n        return 'Étape incomplète - champs requis manquants';\n      case 'upcoming':\n        return 'Étape à venir';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"mb-3\">\n      {/* Step indicators */}\n      <div className=\"flex items-center justify-between mb-1\">\n        {sections.map((section, index) => {\n          const status = getStepStatus(index);\n          const isClickable = isStepClickable(index);\n          const tooltip = getStepTooltip(index, status);\n          \n          return (\n            <div\n              key={section.id}\n              className={`flex items-center ${getStepTextColor(status)} ${\n                isClickable && onStepClick ? 'cursor-pointer hover:opacity-80' : 'cursor-not-allowed opacity-60'\n              } transition-all duration-200`}\n              onClick={() => isClickable && onStepClick?.(index)}\n              title={tooltip}\n            >\n              {getStepIcon(index, status)}\n              <span className=\"hidden sm:block text-xs font-medium ml-1\">\n                {section.title}\n              </span>\n              {index < sections.length - 1 && (\n                <div className=\"hidden sm:block w-6 h-0.5 mx-1 bg-gray-200\" />\n              )}\n            </div>\n          );\n        })}\n      </div>\n      \n      {/* Progress bar */}\n      <div className=\"relative h-1 bg-gray-200 rounded-full overflow-hidden\">\n        <div\n          className=\"absolute h-full bg-teal-600 transition-all duration-300 ease-out\"\n          style={{ width: `${((currentStep + 1) / sections.length) * 100}%` }}\n        />\n      </div>\n      \n      {/* Validation status indicator */}\n      {getStepValidation && (\n        <div className=\"mt-2 text-xs text-gray-600\">\n          {(() => {\n            const currentValidation = getStepValidation(currentStep);\n            if (!currentValidation.canProceed) {\n              return (\n                <div className=\"flex items-center space-x-1 text-red-600\">\n                  <span>⚠️</span>\n                  <span>\n                    {currentValidation.missingFields.length} champ(s) requis manquant(s) \n                    pour continuer à l'étape suivante\n                  </span>\n                </div>\n              );\n            }\n            return (\n              <div className=\"flex items-center space-x-1 text-teal-600\">\n                <span>✓</span>\n                <span>Cette étape est complète, vous pouvez continuer</span>\n              </div>\n            );\n          })()}\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}