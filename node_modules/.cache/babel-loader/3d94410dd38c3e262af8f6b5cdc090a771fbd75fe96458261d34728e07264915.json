{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chemseddine\\\\Desktop\\\\future_sur_taux\\\\frontend\\\\src\\\\components\\\\forms\\\\FutureCreationForm\\\\context\\\\NotificationContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { useNotifications } from '../hooks/useNotifications';\nconst NotificationContext = /*#__PURE__*/createContext(undefined);\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s();\n  const notificationMethods = useNotifications();\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: notificationMethods,\n    children: [children, /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationProvider, \"oRG1rR4ydpMLIrV8Ia4heGgBb8g=\", false, function () {\n  return [useNotifications];\n});\n_c = NotificationProvider;\nexport const useNotificationContext = () => {\n  _s2();\n  const context = useContext(NotificationContext);\n  if (context === undefined) {\n    throw new Error('useNotificationContext must be used within a NotificationProvider');\n  }\n  return context;\n};\n\n// Import here to avoid circular dependency\n_s2(useNotificationContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nimport { NotificationContainer } from '../common/NotificationContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useNotifications","NotificationContext","undefined","NotificationProvider","children","_s","notificationMethods","_jsxDEV","Provider","value","NotificationContainer","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNotificationContext","_s2","context","Error","jsxDEV","$RefreshReg$"],"sources":["C:/Users/chemseddine/Desktop/future_sur_taux/frontend/src/components/forms/FutureCreationForm/context/NotificationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, ReactNode } from 'react';\r\nimport { useNotifications } from '../hooks/useNotifications';\r\n\r\ninterface NotificationContextType {\r\n  showSuccess: (title: string, message?: string) => string;\r\n  showError: (title: string, message?: string) => string;\r\n  showWarning: (title: string, message?: string) => string;\r\n  showInfo: (title: string, message?: string) => string;\r\n  clearAllNotifications: () => void;\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\r\n\r\ninterface NotificationProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const NotificationProvider: React.FC<NotificationProviderProps> = ({ children }) => {\r\n  const notificationMethods = useNotifications();\r\n\r\n  return (\r\n    <NotificationContext.Provider value={notificationMethods}>\r\n      {children}\r\n      <NotificationContainer />\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useNotificationContext = (): NotificationContextType => {\r\n  const context = useContext(NotificationContext);\r\n  if (context === undefined) {\r\n    throw new Error('useNotificationContext must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Import here to avoid circular dependency\r\nimport { NotificationContainer } from '../common/NotificationContainer';\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAmB,OAAO;AACnE,SAASC,gBAAgB,QAAQ,2BAA2B;AAU5D,MAAMC,mBAAmB,gBAAGH,aAAa,CAAsCI,SAAS,CAAC;AAMzF,OAAO,MAAMC,oBAAyD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAMC,mBAAmB,GAAGN,gBAAgB,CAAC,CAAC;EAE9C,oBACEO,OAAA,CAACN,mBAAmB,CAACO,QAAQ;IAACC,KAAK,EAAEH,mBAAoB;IAAAF,QAAA,GACtDA,QAAQ,eACTG,OAAA,CAACG,qBAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnC,CAAC;AAACT,EAAA,CATWF,oBAAyD;EAAA,QACxCH,gBAAgB;AAAA;AAAAe,EAAA,GADjCZ,oBAAyD;AAWtE,OAAO,MAAMa,sBAAsB,GAAGA,CAAA,KAA+B;EAAAC,GAAA;EACnE,MAAMC,OAAO,GAAGnB,UAAU,CAACE,mBAAmB,CAAC;EAC/C,IAAIiB,OAAO,KAAKhB,SAAS,EAAE;IACzB,MAAM,IAAIiB,KAAK,CAAC,mEAAmE,CAAC;EACtF;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,GAAA,CARaD,sBAAsB;AASnC,SAASN,qBAAqB,QAAQ,iCAAiC;AAAC,SAAAU,MAAA,IAAAb,OAAA;AAAA,IAAAQ,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}