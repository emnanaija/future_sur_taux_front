{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chemseddine\\\\Desktop\\\\future_sur_taux\\\\frontend\\\\src\\\\components\\\\FutureCreationForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FutureCreationForm = () => {\n  _s();\n  const [form, setForm] = useState({\n    symbol: '',\n    description: '',\n    isin: '',\n    expirationCode: '',\n    parentTicker: '',\n    fullName: '',\n    segment: '',\n    maturityDate: '',\n    firstTradingDate: '',\n    lastTraadingDate: '',\n    initialMarginAmount: 0,\n    percentageMargin: 0,\n    lotSize: 0,\n    contractMultiplier: 0,\n    tradingCurrency: '',\n    underlyingType: '',\n    underlyingId: 0,\n    settlementMethod: '',\n    instrumentStatus: false,\n    tickSize: 0,\n    tickValue: 0,\n    depositType: ''\n  });\n  const [editMode, setEditMode] = useState('tickValue');\n  const [tickSizeStr, setTickSizeStr] = useState('');\n  const [tickValueInput, setTickValueInput] = useState(0);\n  const [contractMultiplierInput, setContractMultiplierInput] = useState(0);\n  const [settlementMethods, setSettlementMethods] = useState([]);\n  const [depositTypes, setDepositTypes] = useState([]);\n  const [underlyingTypes, setUnderlyingTypes] = useState([]);\n  const [underlyingAssets, setUnderlyingAssets] = useState([]);\n  useEffect(() => {\n    async function fetchEnums() {\n      const [settlementRes, depositRes, typeRes] = await Promise.all([axios.get('/api/enums/settlement-methods'), axios.get('/api/enums/deposit-types'), axios.get('/api/underlyings/types')]);\n      setSettlementMethods(settlementRes.data);\n      setDepositTypes(depositRes.data);\n      setUnderlyingTypes(typeRes.data);\n    }\n    fetchEnums();\n  }, []);\n  useEffect(() => {\n    if (form.underlyingType) {\n      axios.get(`/api/underlying-assets?type=${form.underlyingType}`).then(res => setUnderlyingAssets(res.data)).catch(() => setUnderlyingAssets([]));\n      setForm(prev => ({\n        ...prev,\n        underlyingId: 0\n      }));\n    } else {\n      setUnderlyingAssets([]);\n      setForm(prev => ({\n        ...prev,\n        underlyingId: 0\n      }));\n    }\n  }, [form.underlyingType]);\n  useEffect(() => {\n    setTickSizeStr(form.tickSize > 0 ? form.tickSize.toString() : '');\n  }, [form.tickSize]);\n  const parseTickSize = str => {\n    if (!str) return 0;\n    const val = parseFloat(str);\n    return isNaN(val) ? 0 : val;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setForm(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  const handleModeChange = mode => {\n    setEditMode(mode);\n    setForm(prev => {\n      const tickSize = parseTickSize(tickSizeStr);\n      if (mode === 'tickValue') {\n        return {\n          ...prev,\n          tickValue: tickValueInput,\n          contractMultiplier: tickSize > 0 ? tickValueInput / tickSize : 0\n        };\n      } else {\n        return {\n          ...prev,\n          contractMultiplier: contractMultiplierInput,\n          tickValue: contractMultiplierInput * tickSize\n        };\n      }\n    });\n  };\n  const handleTickSizeChange = e => {\n    const val = e.target.value;\n    if (/^[0-9.]*$/.test(val)) {\n      setTickSizeStr(val);\n    }\n  };\n  const handleTickValueChange = e => {\n    const val = parseFloat(e.target.value);\n    if (!isNaN(val)) {\n      setTickValueInput(val);\n      setForm(prev => {\n        const tickSize = parseTickSize(tickSizeStr);\n        return {\n          ...prev,\n          tickValue: val,\n          contractMultiplier: tickSize > 0 ? val / tickSize : 0\n        };\n      });\n    }\n  };\n  const handleContractMultiplierChange = e => {\n    const val = parseFloat(e.target.value);\n    if (!isNaN(val)) {\n      setContractMultiplierInput(val);\n      setForm(prev => {\n        const tickSize = parseTickSize(tickSizeStr);\n        return {\n          ...prev,\n          contractMultiplier: val,\n          tickValue: val * tickSize\n        };\n      });\n    }\n  };\n  const isRate = form.depositType === 'RATE';\n  const isAmount = form.depositType === 'AMOUNT';\n  const handlePercentageMarginChange = e => {\n    const val = parseFloat(e.target.value);\n    setForm(prev => ({\n      ...prev,\n      percentageMargin: val,\n      initialMarginAmount: prev.lotSize * val\n    }));\n  };\n  const handleInitialMarginAmountChange = e => {\n    const val = parseFloat(e.target.value);\n    setForm(prev => ({\n      ...prev,\n      initialMarginAmount: val,\n      percentageMargin: prev.lotSize > 0 ? val / prev.lotSize : 0\n    }));\n  };\n  useEffect(() => {\n    setForm(prev => {\n      if (isRate) {\n        return {\n          ...prev,\n          initialMarginAmount: prev.lotSize * prev.percentageMargin\n        };\n      } else if (isAmount) {\n        return {\n          ...prev,\n          percentageMargin: prev.lotSize > 0 ? prev.initialMarginAmount / prev.lotSize : 0\n        };\n      }\n      return prev;\n    });\n  }, [form.lotSize, form.depositType]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (form.tickSize <= 0) {\n      alert('Veuillez saisir un Tick Size strictement supérieur à 0.');\n      return;\n    }\n    try {\n      await axios.post('/api/futures', form);\n      alert('Future créé avec succès');\n    } catch (err) {\n      alert('Erreur lors de la création');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: \"/* Rendu UI ici avec ton template */\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(FutureCreationForm, \"NEzj+nPlRN6z7qj11v6aaLY1ZoM=\");\n_c = FutureCreationForm;\nexport default FutureCreationForm;\nvar _c;\n$RefreshReg$(_c, \"FutureCreationForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","FutureCreationForm","_s","form","setForm","symbol","description","isin","expirationCode","parentTicker","fullName","segment","maturityDate","firstTradingDate","lastTraadingDate","initialMarginAmount","percentageMargin","lotSize","contractMultiplier","tradingCurrency","underlyingType","underlyingId","settlementMethod","instrumentStatus","tickSize","tickValue","depositType","editMode","setEditMode","tickSizeStr","setTickSizeStr","tickValueInput","setTickValueInput","contractMultiplierInput","setContractMultiplierInput","settlementMethods","setSettlementMethods","depositTypes","setDepositTypes","underlyingTypes","setUnderlyingTypes","underlyingAssets","setUnderlyingAssets","fetchEnums","settlementRes","depositRes","typeRes","Promise","all","get","data","then","res","catch","prev","toString","parseTickSize","str","val","parseFloat","isNaN","handleChange","e","name","value","type","checked","target","handleModeChange","mode","handleTickSizeChange","test","handleTickValueChange","handleContractMultiplierChange","isRate","isAmount","handlePercentageMarginChange","handleInitialMarginAmountChange","handleSubmit","preventDefault","alert","post","err","console","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chemseddine/Desktop/future_sur_taux/frontend/src/components/FutureCreationForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface FutureCreationDTO {\r\n  symbol: string;\r\n  description: string;\r\n  isin: string;\r\n  expirationCode: string;\r\n  parentTicker: string;\r\n  fullName: string;\r\n  segment: string;\r\n  maturityDate: string;\r\n  firstTradingDate: string;\r\n  lastTraadingDate: string;\r\n  initialMarginAmount: number;\r\n  percentageMargin: number;\r\n  lotSize: number;\r\n  contractMultiplier: number;\r\n  tradingCurrency: string;\r\n  underlyingType: string;\r\n  underlyingId: number;\r\n  settlementMethod: string;\r\n  instrumentStatus: boolean;\r\n  tickSize: number;\r\n  tickValue: number;\r\n  depositType: string;\r\n}\r\n\r\nconst FutureCreationForm: React.FC = () => {\r\n  const [form, setForm] = useState<FutureCreationDTO>({\r\n    symbol: '',\r\n    description: '',\r\n    isin: '',\r\n    expirationCode: '',\r\n    parentTicker: '',\r\n    fullName: '',\r\n    segment: '',\r\n    maturityDate: '',\r\n    firstTradingDate: '',\r\n    lastTraadingDate: '',\r\n    initialMarginAmount: 0,\r\n    percentageMargin: 0,\r\n    lotSize: 0,\r\n    contractMultiplier: 0,\r\n    tradingCurrency: '',\r\n    underlyingType: '',\r\n    underlyingId: 0,\r\n    settlementMethod: '',\r\n    instrumentStatus: false,\r\n    tickSize: 0,\r\n    tickValue: 0,\r\n    depositType: '',\r\n  });\r\n\r\n  const [editMode, setEditMode] = useState<'tickValue' | 'contractMultiplier'>('tickValue');\r\n  const [tickSizeStr, setTickSizeStr] = useState('');\r\n  const [tickValueInput, setTickValueInput] = useState(0);\r\n  const [contractMultiplierInput, setContractMultiplierInput] = useState(0);\r\n\r\n  const [settlementMethods, setSettlementMethods] = useState<string[]>([]);\r\n  const [depositTypes, setDepositTypes] = useState<string[]>([]);\r\n  const [underlyingTypes, setUnderlyingTypes] = useState<string[]>([]);\r\n  const [underlyingAssets, setUnderlyingAssets] = useState<{ id: number; identifier: string }[]>([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchEnums() {\r\n      const [settlementRes, depositRes, typeRes] = await Promise.all([\r\n        axios.get<string[]>('/api/enums/settlement-methods'),\r\n        axios.get<string[]>('/api/enums/deposit-types'),\r\n        axios.get<string[]>('/api/underlyings/types'),\r\n      ]);\r\n      setSettlementMethods(settlementRes.data);\r\n      setDepositTypes(depositRes.data);\r\n      setUnderlyingTypes(typeRes.data);\r\n    }\r\n    fetchEnums();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (form.underlyingType) {\r\n      axios.get<{ id: number; identifier: string }[]>(`/api/underlying-assets?type=${form.underlyingType}`)\r\n        .then(res => setUnderlyingAssets(res.data))\r\n        .catch(() => setUnderlyingAssets([]));\r\n      setForm(prev => ({ ...prev, underlyingId: 0 }));\r\n    } else {\r\n      setUnderlyingAssets([]);\r\n      setForm(prev => ({ ...prev, underlyingId: 0 }));\r\n    }\r\n  }, [form.underlyingType]);\r\n\r\n  useEffect(() => {\r\n    setTickSizeStr(form.tickSize > 0 ? form.tickSize.toString() : '');\r\n  }, [form.tickSize]);\r\n\r\n  const parseTickSize = (str: string): number => {\r\n    if (!str) return 0;\r\n    const val = parseFloat(str);\r\n    return isNaN(val) ? 0 : val;\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setForm(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const handleModeChange = (mode: 'tickValue' | 'contractMultiplier') => {\r\n    setEditMode(mode);\r\n    setForm(prev => {\r\n      const tickSize = parseTickSize(tickSizeStr);\r\n      if (mode === 'tickValue') {\r\n        return {\r\n          ...prev,\r\n          tickValue: tickValueInput,\r\n          contractMultiplier: tickSize > 0 ? tickValueInput / tickSize : 0,\r\n        };\r\n      } else {\r\n        return {\r\n          ...prev,\r\n          contractMultiplier: contractMultiplierInput,\r\n          tickValue: contractMultiplierInput * tickSize,\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleTickSizeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = e.target.value;\r\n    if (/^[0-9.]*$/.test(val)) {\r\n      setTickSizeStr(val);\r\n    }\r\n  };\r\n\r\n  const handleTickValueChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = parseFloat(e.target.value);\r\n    if (!isNaN(val)) {\r\n      setTickValueInput(val);\r\n      setForm(prev => {\r\n        const tickSize = parseTickSize(tickSizeStr);\r\n        return {\r\n          ...prev,\r\n          tickValue: val,\r\n          contractMultiplier: tickSize > 0 ? val / tickSize : 0,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleContractMultiplierChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = parseFloat(e.target.value);\r\n    if (!isNaN(val)) {\r\n      setContractMultiplierInput(val);\r\n      setForm(prev => {\r\n        const tickSize = parseTickSize(tickSizeStr);\r\n        return {\r\n          ...prev,\r\n          contractMultiplier: val,\r\n          tickValue: val * tickSize,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const isRate = form.depositType === 'RATE';\r\n  const isAmount = form.depositType === 'AMOUNT';\r\n\r\n  const handlePercentageMarginChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = parseFloat(e.target.value);\r\n    setForm(prev => ({\r\n      ...prev,\r\n      percentageMargin: val,\r\n      initialMarginAmount: prev.lotSize * val,\r\n    }));\r\n  };\r\n\r\n  const handleInitialMarginAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = parseFloat(e.target.value);\r\n    setForm(prev => ({\r\n      ...prev,\r\n      initialMarginAmount: val,\r\n      percentageMargin: prev.lotSize > 0 ? val / prev.lotSize : 0,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setForm(prev => {\r\n      if (isRate) {\r\n        return { ...prev, initialMarginAmount: prev.lotSize * prev.percentageMargin };\r\n      } else if (isAmount) {\r\n        return { ...prev, percentageMargin: prev.lotSize > 0 ? prev.initialMarginAmount / prev.lotSize : 0 };\r\n      }\r\n      return prev;\r\n    });\r\n  }, [form.lotSize, form.depositType]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (form.tickSize <= 0) {\r\n      alert('Veuillez saisir un Tick Size strictement supérieur à 0.');\r\n      return;\r\n    }\r\n    try {\r\n      await axios.post('/api/futures', form);\r\n      alert('Future créé avec succès');\r\n    } catch (err) {\r\n      alert('Erreur lors de la création');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>/* Rendu UI ici avec ton template */</form>\r\n  );\r\n};\r\n\r\nexport default FutureCreationForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}